/**
 * 比较相邻的元素。如果第一个比第二个大，就交换他们两个。
 * 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。
 * 针对所有的元素重复以上的步骤，除了最后一个。
 * 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。
 */

function bubbleSort (data) {
    // 外层循环中的 i 表示遍历的次数
    // 这里减 1，是因为冒泡只需要 n - 1 此，第 n - 1 次时，实际上已经拍好了第一个和第二个的位置，所以没必要重新再比较
    for (let i = 0; i < data.length - 1; i++) {
        // 内层循环中的 j 表示遍历元素的下标
        // 这里 n - 1 - i，是因为每次比较，都会把本次遍历过程中最大的数推到最后面，所以没必要再去比较推到后面的数
        for (let j = 0; j < data.length - 1 - i; j++) {
            if (data[j] > data[j + 1]) {
                let temp = data[j + 1];
                data[j + 1] = data[j];
                data[j] = temp;
            }
        }
    }
}